name: Generate and Deploy YARD Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'lib/**/*'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.yardopts'
      - '.github/workflows/yardoc.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: Generate YARD Documentation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Ruby environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Configure YARD documentation parameters
        run: |
          # Create comprehensive .yardopts configuration
          cat > .yardopts << 'EOF'
          --protected
          --private
          --markup markdown
          --markup-provider kramdown
          --output-dir doc
          --readme README.md
          --files CHANGELOG.md,LICENSE.txt
          --exclude spec/**/*
          --exclude demo/**/*
          --exclude examples/**/*
          --exclude apps/**/*
          lib/**/*.rb
          -
          README.md
          CHANGELOG.md
          EOF

      - name: Generate comprehensive documentation
        run: |
          echo "::group::YARD Documentation Generation"
          bundle exec yard stats --list-undoc
          bundle exec yard doc
          echo "::endgroup::"

      - name: Validate documentation completeness
        run: |
          echo "::group::Documentation Validation"
          if [ ! -d "doc" ]; then
            echo "Error: Documentation directory not generated"
            exit 1
          fi

          # Check for essential files
          required_files=("index.html" "file.README.html" "file.CHANGELOG.html")
          for file in "${required_files[@]}"; do
            if [ ! -f "doc/$file" ]; then
              echo "Warning: Expected file doc/$file not found"
            fi
          done

          # Display documentation statistics
          echo "Generated documentation files:"
          find doc -name "*.html" | wc -l
          echo "Total documentation size:"
          du -sh doc/
          echo "::endgroup::"

      - name: Setup GitHub Pages configuration
        uses: actions/configure-pages@v4

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './doc'

  deploy-pages:
    timeout-minutes: 10
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify-completion:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [build-docs, deploy-pages]
    if: success()

    steps:
      - name: Documentation deployment summary
        run: |
          echo "::notice title=Documentation Deployed::YARD documentation successfully deployed to GitHub Pages"
          echo "::notice title=Access URL::Documentation available at: ${{ needs.deploy-pages.outputs.page_url }}"
